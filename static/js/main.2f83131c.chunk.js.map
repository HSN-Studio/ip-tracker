{"version":3,"sources":["components/Search.js","components/Info.js","components/Map.js","App.js","index.js"],"names":["Search","clickHandler","inputHandler","className","type","placeholder","onChange","onClick","color","Info","data","ip","city","country_code","postal","timezone","org","Map","position","useState","state","setstate","useEffect","flyToPos","map","flyTo","id","MapContainer","center","zoom","whenCreated","TileLayer","attribution","url","Marker","Popup","App","ipAddress","setipAddress","ipInfo","setipInfo","pos","setpos","loadInfo","fetch","then","res","json","console","log","latitude","longitude","e","target","value","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAyBeA,MArBf,YAAiD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC9B,OACE,sBAAKC,UAAU,mBAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,sBAAKA,UAAU,aAAf,UACE,uBACEC,KAAK,OACLC,YAAY,kCACZC,SAAUJ,IAEZ,sBAAMC,UAAU,cAAcI,QAASN,EAAvC,SACE,cAAC,IAAD,CAAcO,MAAM,eAGxB,qBAAKL,UAAU,UAAf,SACE,0DCYOM,MA7Bf,YAAyB,IAATC,EAAQ,EAARA,KACd,OAAKA,EAEH,qBAAKP,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,iCACE,2CACA,6BAAKO,EAAKC,QAGZ,iCACE,yCACA,+BACGD,EAAKE,KADR,KACgBF,EAAKG,aADrB,IACoCH,EAAKI,aAG3C,iCACE,yCACA,6BAAKJ,EAAKK,cAEZ,iCACE,oCACA,6BAAKL,EAAKM,cArBA,M,gCCsCLC,MAvCf,YAA4B,IAAbC,EAAY,EAAZA,SAEb,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGAC,qBAAU,WACRC,MACC,CAACL,IAGJ,IAAMK,EAAW,WACf,IAAQC,EAAQJ,EAARI,IACJA,GACFA,EAAIC,MAAMP,IAKd,OACE,qBAAKf,UAAU,MAAMuB,GAAG,MAAxB,SACE,eAACC,EAAA,EAAD,CACEC,OAAQ,CAAC,QAAS,QAClBC,KAAM,GACNC,YAAa,SAACN,GAAD,OAASH,EAAS,CAAEG,SAHnC,UAKE,cAACO,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQhB,SAAUA,EAAlB,SACE,eAACiB,EAAA,EAAD,mCACuB,uBADvB,mCCSKC,MApCf,WAEE,MAAkCjB,mBAAS,IAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAA4BnB,mBAAS,IAArC,mBAAOoB,EAAP,KAAeC,EAAf,KACA,EAAsBrB,mBAAS,CAAC,UAAW,QAA3C,mBAAOsB,EAAP,KAAYC,EAAZ,KAWMC,EAAW,SAAUhC,GACzBiC,MAAM,oBAAD,OAAqBjC,EAArB,WACFkC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACnC,GACL8B,EAAU9B,GACVsC,QAAQC,IAAIvC,GACZgC,EAAO,CAAChC,EAAKwC,SAAUxC,EAAKyC,gBAMlC,OACE,sBAAKhD,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,aAtBS,SAAUkD,GAC7Bd,EAAac,EAAEC,OAAOC,MAAMC,QAAQ,MAAO,MAqBLtD,aAlBnB,WACnB0C,EAASN,MAkBP,cAAC,EAAD,CAAM3B,KAAM6B,IACZ,cAAC,EAAD,CAAKrB,SAAUuB,QChCrBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f83131c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport { FaAngleRight } from \"react-icons/fa\";\r\nfunction Search({ clickHandler, inputHandler }) {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <h1 className=\"title\">IP Address Tracker</h1>\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for IP address or domain\"\r\n          onChange={inputHandler}\r\n        ></input>\r\n        <span className=\"search-icon\" onClick={clickHandler}>\r\n          <FaAngleRight color=\"white\" />\r\n        </span>\r\n      </div>\r\n      <div className=\"err-msg\">\r\n        <p>Invalid Ip Address!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nfunction Info({ data }) {\r\n  if (!data) return null;\r\n  return (\r\n    <div className=\"info-container\">\r\n      <div className=\"info\">\r\n        <span>\r\n          <p>IP ADDRESS</p>\r\n          <h3>{data.ip}</h3>\r\n        </span>\r\n\r\n        <span>\r\n          <p>LOCATION</p>\r\n          <h3>\r\n            {data.city}, {data.country_code} {data.postal}\r\n          </h3>\r\n        </span>\r\n        <span>\r\n          <p>TIMEZONE</p>\r\n          <h3>{data.timezone}</h3>\r\n        </span>\r\n        <span>\r\n          <p>ISP</p>\r\n          <h3>{data.org}</h3>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nfunction Map({ position }) {\r\n  //States\r\n  const [state, setstate] = useState(\"\");\r\n\r\n  // LifeCycle Methods\r\n  useEffect(() => {\r\n    flyToPos();\r\n  }, [position]);\r\n\r\n  // Regular Methods\r\n  const flyToPos = () => {\r\n    const { map } = state;\r\n    if (map) {\r\n      map.flyTo(position);\r\n    }\r\n  };\r\n\r\n  //JSX\r\n  return (\r\n    <div className=\"map\" id=\"map\">\r\n      <MapContainer\r\n        center={[31.4504, 73.135]}\r\n        zoom={13}\r\n        whenCreated={(map) => setstate({ map })}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={position}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n\r\n//   if (!map) {\r\n//     map = L.map(\"map\", {\r\n//       center: [48.864716, 2.349],\r\n//       zoom: 16,\r\n//       layers: [\r\n//         L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\r\n//           attribution:\r\n//             '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n//         }),\r\n//       ],\r\n//     });\r\n//   }\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/Search\";\nimport Info from \"./components/Info\";\nimport Map from \"./components/Map\";\nfunction App() {\n  // States\n  const [ipAddress, setipAddress] = useState(``);\n  const [ipInfo, setipInfo] = useState(``);\n  const [pos, setpos] = useState([48.864716, 2.349]);\n\n  // Handler Functions\n  const inputHandler = function (e) {\n    setipAddress(e.target.value.replace(/\\s/g, \"\"));\n  };\n\n  const clickHandler = function () {\n    loadInfo(ipAddress);\n  };\n  //Methods\n  const loadInfo = function (ip) {\n    fetch(`https://ipapi.co/${ip}/json/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setipInfo(data);\n        console.log(data);\n        setpos([data.latitude, data.longitude]);\n      });\n  };\n\n  //JSX\n\n  return (\n    <div className=\"App\">\n      <Search inputHandler={inputHandler} clickHandler={clickHandler} />\n      <Info data={ipInfo} />\n      <Map position={pos} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}